 AS V1.42 Beta [Bld 114] - source file test.asm - page 1 - 7/1/2017 17:44:24


       1/       0 :                     
       2/       0 :                     	cpu 	1802
       3/       0 :                     	
       4/       0 : =0H                 r0 = 0
       5/       0 : =1H                 r1 = 1
       6/       0 : =2H                 r2 = 2
       7/       0 : =3H                 r3 = 3
       8/       0 : =4H                 r4 = 4
       9/       0 : =5H                 r5 = 5
      10/       0 :                     
      11/       0 : =FH                 rRValue = 15
      12/       0 : =EH                 rResult = 14
      13/       0 :                     
      14/       0 : 71                  	dis
      15/       1 : 00                  	db 		0
      16/       2 : F8 40               	ldi 	040h 												; set up stack.
      17/       4 : B2                  	phi 	r2
      18/       5 : F8 00               	ldi 	000h
      19/       7 : A2                  	plo 	r2
      20/       8 :                     
      21/       8 :                     
      22/       8 : =13EH               v1 = 318
      23/       8 : =33H                v2 = 51
      24/       8 :                     
      25/       8 : E2                  	sex 	r2													; set up stack with left value.
      26/       9 : 22                  	dec 	r2 													; (R2) = LSB (R2-1) = MSB
      27/       A : F8 3E               	ldi 	v1&255
      28/       C : 73                  	stxd
      29/       D : F8 01               	ldi 	v1/256
      30/       F : 52                  	str 	r2
      31/      10 : 12                  	inc 	r2
      32/      11 :                     
      33/      11 : F8 00               	ldi 	v2/256 												; set up rRValue with right value.
      34/      13 : BF                  	phi 	rRValue
      35/      14 : F8 33               	ldi 	v2&255
      36/      16 : AF                  	plo 	rRValue
      37/      17 :                     
      38/      17 :                     	include 	multiply.asm
(1)    1/      17 :                     ; ***************************************************************************************************************
(1)    2/      17 :                     ; ***************************************************************************************************************
(1)    3/      17 :                     ;
(1)    4/      17 :                     ;		File:		multiply.asm
(1)    5/      17 :                     ;		Purpose:	16 bit x 16 bit unsigned multiply with 16 bit product.
(1)    6/      17 :                     ;		Author:		Paul Robson (paul@robsons.org.uk)
(1)    7/      17 :                     ;		Date:		7th January 2017.
(1)    8/      17 :                     ;
(1)    9/      17 :                     ; ***************************************************************************************************************
(1)   10/      17 :                     ; ***************************************************************************************************************
(1)   11/      17 :                     
(1)   12/      17 :                     ; ***************************************************************************************************************
(1)   13/      17 :                     ;
(1)   14/      17 :                     ;		16 bit multiplier. 
(1)   15/      17 :                     ;
(1)   16/      17 :                     ;		On entry, first value is (R2-1)(R2) (e.g. on the stack, TOS = LSB), second is in rRValue
(1)   17/      17 :                     ;		On entry, X is 2.
(1)   18/      17 :                     ;		On exit, result is in R2-1/R2 (MSB/LSB).
(1)   19/      17 :                     ;	
(1)   20/      17 :                     ;		R2 (stack pointer) is unchanged. rRValue is changed. rResult is changed
(1)   21/      17 :                     ;
(1)   22/      17 :                     ; ***************************************************************************************************************
 AS V1.42 Beta [Bld 114] - source file test.asm(multiply.asm) - page 2 - 7/1/2017 17:44:24


(1)   23/      17 :                     
(1)   24/      17 :                     MULStart:
(1)   25/      17 : F8 00               	ldi 	0  													; clear the result.
(1)   26/      19 : BE                  	phi 	rResult
(1)   27/      1A : AE                  	plo 	rResult
(1)   28/      1B :                     
(1)   29/      1B :                     __MULLoop:	
(1)   30/      1B : 9F                  	ghi 	rRValue 											; shift the R Value right into the carry
(1)   31/      1C : F6                  	shr
(1)   32/      1D : BF                  	phi 	rRValue
(1)   33/      1E : 8F                  	glo 	rRValue
(1)   34/      1F : 76                  	rshr
(1)   35/      20 : AF                  	plo 	rRValue
(1)   36/      21 :                     
(1)   37/      21 : 3B 2B               	bnf 	__MULDontAdd 										; if no carry do not add multiplicand.
(1)   38/      23 :                     
(1)   39/      23 : 8E                  	glo 	rResult 											; add value on stack (multiplicand) to rResult
(1)   40/      24 : F4                  	add
(1)   41/      25 : AE                  	plo 	rResult
(1)   42/      26 : 22                  	dec 	r2
(1)   43/      27 : 9E                  	ghi 	rResult
(1)   44/      28 : 74                  	adc
(1)   45/      29 : BE                  	phi 	rResult
(1)   46/      2A : 12                  	inc 	r2
(1)   47/      2B :                     
(1)   48/      2B :                     __MULDontAdd:	
(1)   49/      2B :                     	
(1)   50/      2B : 02                  	ldn 	r2 													; shift multiplicand left
(1)   51/      2C : F4                  	add
(1)   52/      2D : 73                  	stxd
(1)   53/      2E : 02                  	ldn 	r2
(1)   54/      2F : 74                  	adc
(1)   55/      30 : 52                  	str 	r2
(1)   56/      31 : 12                  	inc 	r2
(1)   57/      32 :                     
(1)   58/      32 : 8F                  	glo 	rRValue 											; loop back if multiplier is non-zero.
(1)   59/      33 : 3A 1B               	bnz 	__MULLoop
(1)   60/      35 : 9F                  	ghi 	rRValue
(1)   61/      36 : 3A 1B               	bnz 	__MULLoop
(1)   62/      38 :                     
(1)   63/      38 : 8E                  	glo 	rResult 											; copy result out to stack.
(1)   64/      39 : 73                  	stxd
(1)   65/      3A : 9E                  	ghi 	rResult
(1)   66/      3B : 52                  	str 	r2
(1)   67/      3C : 12                  	inc 	r2
(1)   68/      3D :                     
(1)   69/      3D :                     
(1)   70/      3D :                     
      39/      3D :                     
      40/      3D : 30 3D               st:	br		st
      41/      3F :                     
 AS V1.42 Beta [Bld 114] - source file test.asm - page 3 - 7/1/2017 17:44:24


  symbol table (* = unused):
  ------------------------

*ARCHITECTURE :                                        x86_64-unknown-linux - |
*BIGENDIAN :                      0 - | *BRANCHEXT :                      0 - |
*CASESENSITIVE :                  0 - | *CONSTPI :        3.141592653589793 - |
*DATE :                    7/1/2017 - | *FALSE :                          0 - |
*FULLPMMU :                       1 - | *HAS64 :                          1 - |
*HASDSP :                         0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - | *INEXTMODE :                      0 - |
*INLWORDMODE :                    0 - | *INMAXMODE :                      0 - |
*INSRCMODE :                      0 - | *INSUPMODE :                      0 - |
*LISTON :                         1 - | *MACEXP :                         1 - |
*MOMCPU :                      1802 - | *MOMCPUNAME :                  1802 - |
*MULSTART :                      17 C | *NESTMAX :                      100 - |
*PACKING :                        0 - | *PADDING :                        1 - |
*R0 :                             0 - | *R1 :                             1 - |
 R2 :                             2 - | *R3 :                             3 - |
*R4 :                             4 - | *R5 :                             5 - |
*RELAXED :                        0 - |  RRESULT :                        E - |
 RRVALUE :                        F - |  ST :                            3D C |
*TIME :                    17:44:24 - | *TRUE :                           1 - |
 V1 :                           13E - |  V2 :                            33 - |
*VERSION :                     142F - |  __MULDONTADD :                  2B C |
 __MULLOOP :                     1B C |

     42 symbols
     34 unused symbols

 AS V1.42 Beta [Bld 114] - source file test.asm - page 4 - 7/1/2017 17:44:24


  codepages:
  ----------

STANDARD (0 changed characters)


0.00 seconds assembly time

    111 lines source file
      2 passes
      0 errors
      0 warnings
