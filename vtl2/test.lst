 AS V1.42 Beta [Bld 114] - source file test.asm - page 1 - 7/1/2017 22:07:25


       1/       0 :                     
       2/       0 :                     	cpu 	1802
       3/       0 :                     	
       4/       0 : =0H                 r0 = 0
       5/       0 : =1H                 r1 = 1
       6/       0 : =2H                 r2 = 2
       7/       0 : =3H                 r3 = 3
       8/       0 : =4H                 r4 = 4
       9/       0 : =5H                 r5 = 5
      10/       0 :                     
      11/       0 :                     
      12/       0 :                     
      13/       0 : =DH                 rCounter = 13
      14/       0 : =EH                 rResult = 14
      15/       0 : =EH                 rRemainder = 14
      16/       0 : =FH                 rRValue = 15
      17/       0 :                     
      18/       0 : 71                  	dis
      19/       1 : 00                  	db 		0
      20/       2 : F8 40               	ldi 	040h 												; set up stack.
      21/       4 : B2                  	phi 	r2
      22/       5 : F8 00               	ldi 	000h
      23/       7 : A2                  	plo 	r2
      24/       8 :                     
      25/       8 :                     
      26/       8 : =F532H              v1 = 62770
      27/       8 : =2D11H              v2 = 11537
      28/       8 :                     
      29/       8 : E2                  	sex 	r2													; set up stack with left value.
      30/       9 : 22                  	dec 	r2 													; (R2) = LSB (R2-1) = MSB
      31/       A : F8 32               	ldi 	v1&255
      32/       C : 73                  	stxd
      33/       D : F8 F5               	ldi 	v1/256
      34/       F : 52                  	str 	r2
      35/      10 : 12                  	inc 	r2
      36/      11 :                     
      37/      11 : F8 2D               	ldi 	v2/256 												; set up rRValue with right value.
      38/      13 : BF                  	phi 	rRValue
      39/      14 : F8 11               	ldi 	v2&255
      40/      16 : AF                  	plo 	rRValue
      41/      17 :                     
      42/      17 :                     ;	include 	multiply.asm
      43/      17 :                     	include 	divide.asm
(1)    1/      17 :                     ; ***************************************************************************************************************
(1)    2/      17 :                     ; ***************************************************************************************************************
(1)    3/      17 :                     ;
(1)    4/      17 :                     ;		File:		divide.asm
(1)    5/      17 :                     ;		Purpose:	16 bit x 16 bit unsigned divide with 16 bit result/remainder
(1)    6/      17 :                     ;		Author:		Paul Robson (paul@robsons.org.uk)
(1)    7/      17 :                     ;		Date:		7th January 2017.
(1)    8/      17 :                     ;
(1)    9/      17 :                     ; ***************************************************************************************************************
(1)   10/      17 :                     ; ***************************************************************************************************************
(1)   11/      17 :                     
(1)   12/      17 :                     ; ***************************************************************************************************************
(1)   13/      17 :                     ;
(1)   14/      17 :                     ;		16 bit divisor.
(1)   15/      17 :                     ;
(1)   16/      17 :                     ;		On entry, first value is (R2-1)(R2) (e.g. on the stack, TOS = LSB), second is in rRValue
(1)   17/      17 :                     ;		On entry, X is 2.
 AS V1.42 Beta [Bld 114] - source file test.asm(divide.asm) - page 2 - 7/1/2017 22:07:25


(1)   18/      17 :                     ;		On exit, result is in R2-1/R2 (MSB/LSB). Remainder of division is in rRemainder.
(1)   19/      17 :                     ;	
(1)   20/      17 :                     ;		R2 (stack pointer) is unchanged. rRValue is changed. rResult is changed
(1)   21/      17 :                     ;
(1)   22/      17 :                     ; ***************************************************************************************************************
(1)   23/      17 :                     
(1)   24/      17 :                     DIVStart:
(1)   25/      17 :                     
(1)   26/      17 : F8 00               	ldi 	0 													; zero remainder
(1)   27/      19 : BE                  	phi 	rRemainder
(1)   28/      1A : AE                  	plo 	rRemainder
(1)   29/      1B : 76                  	shrc 														; clear carry (DF)
(1)   30/      1C :                     
(1)   31/      1C : F8 11               	ldi 	17 													; set counter to 17.
(1)   32/      1E : AD                  	plo 	rCounter
(1)   33/      1F :                     
(1)   34/      1F :                     __DIVLoop:
(1)   35/      1F : 02                  	ldn 	r2 													; read LSB of Dividend.
(1)   36/      20 : 7E                  	rshl 														; shift carry into it left
(1)   37/      21 : 73                  	stxd  														; write back, point to MSB of Dividend.
(1)   38/      22 : 02                  	ldn 	r2													; read MSB
(1)   39/      23 : 7E                  	rshl 														; shift into that
(1)   40/      24 : 52                  	str 	r2 													; write it back.
(1)   41/      25 : 12                  	inc 	r2 													; fix stack to point to LSB of Dividend.
(1)   42/      26 :                     
(1)   43/      26 : 2D                  	dec 	rCounter 											; decrement counter
(1)   44/      27 : 8D                  	glo 	rCounter 											; exit if zero.
(1)   45/      28 : 32 44               	bz 		__DIVExit
(1)   46/      2A :                     
(1)   47/      2A : 8E                  	glo 	rRemainder 											; shift DF into the remainder
(1)   48/      2B : 7E                  	rshl
(1)   49/      2C : AE                  	plo 	rRemainder
(1)   50/      2D : 9E                  	ghi 	rRemainder
(1)   51/      2E : 7E                  	rshl
(1)   52/      2F : BE                  	phi 	rRemainder
(1)   53/      30 :                     
(1)   54/      30 : 22                  	dec 	r2 													; make space on TOS for remainder-divisor temp 	
(1)   55/      31 : 22                  	dec 	r2
(1)   56/      32 : 8F                  	glo 	rRValue 											; D = LSB divisor
(1)   57/      33 : 52                  	str 	r2
(1)   58/      34 : 8E                  	glo 	rRemainder 											; D = LSB remainder - LSB divisor.
(1)   59/      35 : F7                  	sm
(1)   60/      36 : BD                  	phi 	rCounter 											; temp result in rCounter.1
(1)   61/      37 :                     
(1)   62/      37 : 9F                  	ghi 	rRValue 											; now repeat it with MSB.
(1)   63/      38 : 52                  	str 	r2
(1)   64/      39 : 9E                  	ghi 	rRemainder
(1)   65/      3A : 77                  	smb  														; D = MSB of result.
(1)   66/      3B : 12                  	inc 	r2 													; fix up stack.
(1)   67/      3C : 12                  	inc 	r2
(1)   68/      3D :                     
(1)   69/      3D : 3B 1F               	bnf 	__DIVLoop 											; if DF = 0 loop back with DF = 0.
(1)   70/      3F :                     
(1)   71/      3F : BE                  	phi 	rRemainder 											; update remainder with result of the sum.
(1)   72/      40 : 9D                  	ghi 	rCounter 											; and the interim value
(1)   73/      41 : AE                  	plo 	rRemainder
(1)   74/      42 : 30 1F               	br 		__DIVLoop 											; loop round with DF = 1
(1)   75/      44 :                     
(1)   76/      44 :                     __DIVExit:														; result is already in dividend.
(1)   77/      44 :                     
 AS V1.42 Beta [Bld 114] - source file test.asm(divide.asm) - page 3 - 7/1/2017 22:07:25


(1)   78/      44 :                     DIVEnd:
(1)   79/      44 :                     
      44/      44 :                     
      45/      44 :                     
      46/      44 :                     
      47/      44 :                     
      48/      44 : 30 44               st:	br		st
      49/      46 :                     
 AS V1.42 Beta [Bld 114] - source file test.asm - page 4 - 7/1/2017 22:07:25


  symbol table (* = unused):
  ------------------------

*ARCHITECTURE :                                        x86_64-unknown-linux - |
*BIGENDIAN :                      0 - | *BRANCHEXT :                      0 - |
*CASESENSITIVE :                  0 - | *CONSTPI :        3.141592653589793 - |
*DATE :                    7/1/2017 - | *DIVEND :                        44 C |
*DIVSTART :                      17 C | *FALSE :                          0 - |
*FULLPMMU :                       1 - | *HAS64 :                          1 - |
*HASDSP :                         0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - | *INEXTMODE :                      0 - |
*INLWORDMODE :                    0 - | *INMAXMODE :                      0 - |
*INSRCMODE :                      0 - | *INSUPMODE :                      0 - |
*LISTON :                         1 - | *MACEXP :                         1 - |
*MOMCPU :                      1802 - | *MOMCPUNAME :                  1802 - |
*NESTMAX :                      100 - | *PACKING :                        0 - |
*PADDING :                        1 - | *R0 :                             0 - |
*R1 :                             1 - |  R2 :                             2 - |
*R3 :                             3 - | *R4 :                             4 - |
*R5 :                             5 - |  RCOUNTER :                       D - |
*RELAXED :                        0 - |  RREMAINDER :                     E - |
*RRESULT :                        E - |  RRVALUE :                        F - |
 ST :                            44 C | *TIME :                    22:07:25 - |
*TRUE :                           1 - |  V1 :                          F532 - |
 V2 :                          2D11 - | *VERSION :                     142F - |
 __DIVEXIT :                     44 C |  __DIVLOOP :                     1F C |

     45 symbols
     36 unused symbols

 AS V1.42 Beta [Bld 114] - source file test.asm - page 5 - 7/1/2017 22:07:25


  codepages:
  ----------

STANDARD (0 changed characters)


0.00 seconds assembly time

    128 lines source file
      2 passes
      0 errors
      0 warnings
